version: '2.1'
jobs:
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create and deploy Front End
          command: |
            aws cloudformation deploy \
              --template-file bucket.yml \
              --stack-name "stack-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-override NAME="${CIRCLE_WORKFLOW_ID:0:7}"
      - run: 
          name: Upload new file in new Bucket
          command: | 
            aws s3 cp index.html s3://bucket-${CIRCLE_WORKFLOW_ID:0:7}/index.html
  get_last_deployment_id:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - run: mkdir workspace
      - run:
          name: Install AWS CLI
          command: |
            apk add --no-cache python3 py3-pip
            pip3 install --upgrade pip 
            pip3 install awscli
            rm -rf /var/cache/apk/*
      - run:
          name: Get the last deploymentID
          command: |
            aws cloudformation list-exports \
              --query "Exports[?Name==\`PipelineID\`].Value" \
              --no-paginate --output text >> workspace/deployment_id
      - persist_to_workspace:
          root: workspace
          # Must be relative path from root
          paths:
            - deployment_id
  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Promote to Production
          command: |
            aws cloudformation deploy \
              --template-file cloudfront.yml \
              --stack-name production-distro \
              --parameter-override PipelineID="${CIRCLE_WORKFLOW_ID:0:7}"

  clean_up_old_front_end:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: workspace
      - run:
          name: Install AWS CLI
          command: |
            apk add --no-cache python3 py3-pip
            pip3 install --upgrade pip 
            pip3 install awscli
            rm -rf /var/cache/apk/*
      - run:
          name: Clean Up Old Front End
          command: |
            ls
            cd workspace
            ls
            $PipelineId=$(cat deployment_id)
            echo $PipelineId
            aws s3 rm "s3://bucket-${PipelineId}" --recursive
            aws cloudformation delete-stack --stack-name "stack-${PipelineId}"
  
workflows:
  create-front-end-resources:
    jobs:
      - create_and_deploy_front_end
      - get_last_deployment_id:
          requires:
            - create_and_deploy_front_end
      - promote_to_production:
          requires:
            - create_and_deploy_front_end
      - clean_up_old_front_end:
          requires:
            - get_last_deployment_id
            - promote_to_production